.breadcrumb {
  /*centering*/
  display: inline-block;
  overflow: hidden;
  text-align: center;
  width: 100%;
  border-radius: 2px; }

.breadcrumb a {
  text-decoration: none;
  outline: none;
  display: block;
  float: left;
  font-size: 12px;
  line-height: 48px;
  color: white;
  position: relative;
  width: 25%; }

.breadcrumb a:hover {
  text-decoration: none;
  color: #fff; }

/*since the first link does not have a triangle before it we can reduce the left padding to make it look consistent with other links*/
.breadcrumb a:first-child {
  border-radius: 2px 0 0 2px;
  /*to match with the parent's radius*/ }

.breadcrumb a:first-child:before {
  left: 14px; }

.breadcrumb a:last-child {
  border-radius: 0 2px 2px 0;
  /*this was to prevent glitches on hover*/ }

/*adding the arrows for the breadcrumbs using rotated pseudo elements*/
.breadcrumb a:after {
  content: "";
  position: absolute;
  top: 0;
  right: -18px;
  /*half of square's length*/
  /*same dimension as the line-height of .breadcrumb a */
  width: 48px;
  height: 48px;
  /*as you see the rotated square takes a larger height. which makes it tough to position it properly. So we are going to scale it down so that the diagonals become equal to the line-height of the link. We scale it to 70.7% because if square's: 
	length = 1; diagonal = (1^2 + 1^2)^0.5 = 1.414 (pythagoras theorem)
	if diagonal required = 1; length = 1/1.414 = 0.707*/
  transform: scale(0.707) rotate(45deg);
  /*we need to prevent the arrows from getting buried under the next link*/
  z-index: 1;
  /*background same as links but the gradient will be rotated to compensate with the transform applied*/
  background: #fff;
  /*stylish arrow design using box shadow*/
  box-shadow: 2px -2px 0 2px rgba(0, 0, 0, 0), 3px -3px 0 2px white;
  /*
		5px - for rounded arrows and 
		50px - to prevent hover glitches on the border created using shadows*/
  border-radius: 0 5px 0 50px; }

/*we dont need an arrow after the last link*/
.breadcrumb a:last-child:after {
  content: none; }

.flat a,
.flat a:after {
  background: inherit;
  color: white; }

.flat a:before {
  background: white; }
